{"version":3,"sources":["works.js","reducer.js","store.js","painding.js","reduxnotes.js","actio.js","App.js","index.js"],"names":["init","notes","listcompleted","pai","firedata","usernotes","Date","state","action","type","payload","ii","chk","two","tr","d","filter","e","id","w","map","console","log","p","rootReducer","combineReducers","store","createStore","Painding","paind","useSelector","style","textAlign","color","fontSize","display","justifyContent","flexWrap","da","i","margin","padding","backgroundColor","borderRadius","text","marginTop","time","mainbod","Reduxnotes","React","useRef","redref","textarear","user","dispatch","useDispatch","useState","setGetid","current","st","nd","togmod","setTogmod","setCh","useEffect","pay","ariaHideApp","isOpen","content","height","width","xmlns","fill","viewBox","strokeWidth","stroke","className","cursor","position","right","top","onClick","strokeLinecap","strokeLinejoin","flexDirection","ref","border","borderBottom","outline","placeholder","fontWeight","value","length","toLocaleString","te","mai","tim","App","document","body","to","marginRight","path","element","rootElement","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.9c5da566.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nconst init={\r\nnotes:[],\r\nlistcompleted:[],\r\npai:[],\r\nfiredata:[]\r\n\r\n}\r\nvar current = new Date();\r\nconst usernotes=(state=init,action)=>{\r\n\r\nswitch(action.type){\r\n \r\n  case \"add\":\r\n\r\n//console.log(state.notes)\r\n    return{\r\n      ...state,\r\n      notes:[...state.notes,action.payload]\r\n    }\r\n    break;\r\n    case \"update\":\r\n\r\n   \r\nstate.notes[action.payload.ii].chk=action.two.tr\r\n\r\n    return{\r\n      ...state,\r\n      listcompleted:[...state.listcompleted,action.payload],\r\n      notes:[...state.notes]\r\n    }\r\n    break;\r\n    case \"del\":\r\n      let d=state.notes.filter(e=>e.id!==action.payload)\r\n     \r\n      return{\r\n\r\n        ...state,\r\n        notes:d\r\n      }\r\nbreak;\r\ncase \"imgr\":\r\nlet  w=action.payload.map((e)=>{\r\n  return e;\r\n})\r\n  console.log(state.firedata,\"fi3e\")\r\n \r\n    //console.log(da,action.payload)\r\nreturn{\r\n...state,\r\n  firedata:w\r\n}\r\n\r\nbreak;\r\ncase \"pai\":\r\n  var p=state.notes.filter((e)=>{\r\n    return e.chk===false\r\n  })\r\n\r\nreturn{\r\n...state,\r\n  pai:p\r\n}\r\n\r\n\r\n  default:\r\n    return state;\r\n    \r\n}\r\n\r\n}\r\nexport default usernotes;\r\n\r\n\r\n{/*const init={\r\nnotes:[]\r\n\r\n}\r\nconst usernotes=(state=init,action)=>{\r\n\r\nswitch(action.type){\r\n\r\n  case \"add\":\r\n   \r\n    return{\r\n      ...state,\r\n      notes:[...state.notes,action.payload]\r\n    }\r\n    break;\r\n    case \"update\":\r\n    console.log(action.payload)\r\n   \r\n   \r\n    state.notes[action.payload.i].text=action.payload.te\r\n\r\n    return{\r\n      ...state,\r\n      notes:[...state.notes]\r\n    }\r\n    break;\r\n    case \"del\":\r\n      let d=state.notes.filter(e=>e.id!==action.payload)\r\n      console.log(d)\r\n      return{\r\n\r\n        ...state,\r\n        notes:d\r\n      }\r\n  default:\r\n    return state;\r\n    \r\n}\r\n\r\n}\r\nexport default usernotes;*/ }\r\n\r\n","import usernotes from './works';\r\nimport {combineReducers} from 'redux';\r\nconst rootReducer = combineReducers({ usernotes });\r\nexport default rootReducer;\r\n","import {createStore} from \"redux\";\r\nimport rootReducer from \"./reducer\"\r\nconst store=createStore(rootReducer);\r\nexport default store;","import React from \"react\";\r\nimport {useSelector} from 'react-redux';\r\nconst Painding=()=>{\r\nvar paind=useSelector((e)=>e.usernotes.pai)\r\n  return(\r\n<>\r\n<div >\r\n\r\n<p style={{textAlign:\"center\",color:\"white\",fontSize:\"23px\"}}>Painding Tasks</p>\r\n<div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-around',\r\n          flexWrap: 'wrap',\r\n          \r\n        }}\r\n      >\r\n        {paind?.map((da,i) => {\r\n            return (\r\n              <>\r\n                <div\r\n                key={i}\r\n                  style={{\r\n                    margin: '6px',\r\n                    padding: '23px',\r\n                    color: 'white',\r\n                    backgroundColor: '#686d75',\r\n\r\n                    borderRadius: '9px',\r\n                  }}\r\n                >\r\n                  <h3> {da.text}</h3>\r\n                  <h5 style={{marginTop:\"-13px\"}}>\r\n                    {da.time}\r\n                    </h5>\r\n                    <p style={{marginTop:\"-28\"}}>{da.mainbod}</p>\r\n                   \r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n\r\n      </div>\r\n      </div>\r\n</>\r\n\r\n  )\r\n}\r\nexport default Painding;","import React from 'react';\r\nimport { add, dele, update ,imgrr,pain} from './actio';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport ReactTooltip from 'react-tooltip';\r\nconst Reduxnotes = () => {\r\n  const reduim=React.useRef();\r\n  const redref = React.useRef();\r\n  const redref1 = React.useRef();\r\n  const textarear = React.useRef();\r\n  const user = useSelector((e) => e.usernotes.notes);\r\n  const fire = useSelector((e) => e.usernotes.firedata);\r\n  const dispatch = useDispatch();\r\n  const [useinp, setUseinp] = React.useState(false);\r\n  const [getid, setGetid] = React.useState(null);\r\n  const [newtext, setNewtext] = React.useState('');\r\n  const[im,setIm]=React.useState([{id:0,p:\"ha\"},{id:1,p:\"haa\"}]);\r\n  var current = new Date();\r\n  \r\n  const [togmod, setTogmod] = React.useState({\r\n    st: false,\r\n    nd: false,\r\n  });\r\nconst[ch,setCh]=React.useState(false);\r\n  const mod = {\r\n    content: {\r\n      margin: 'auto',\r\n      height: '222px',\r\n      width:\"55%\"\r\n    },\r\n  };\r\n\r\n  const edittext = (id) => {};\r\nReact.useEffect(()=>{\r\n  dispatch(pain())\r\n})\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {/*add modal */}\r\n      <Modal ariaHideApp={false} isOpen={togmod.st} style={mod}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          strokeWidth={1.5}\r\n          stroke=\"currentColor\"\r\n          className=\"w-6 h-6\"\r\n          style={{\r\n            height: '33px',\r\n            width: '26px',\r\n            cursor: 'pointer',\r\n            position: 'absolute',\r\n            right: '0',\r\n            top: '0',\r\n          }}\r\n          onClick={() => {\r\n            setTogmod({ ...togmod, st: false });\r\n          }}\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            d=\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n          />\r\n        </svg>\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n          <input\r\n            type=\"text\"\r\n            ref={redref}\r\n            style={{\r\n              border: 'none',\r\n              borderBottom: '1.6px solid black',\r\n              outline: 'none',\r\n              fontSize:\"17px\"\r\n            }}\r\n            placeholder=\"Title\"\r\n          />\r\n          <br />\r\n\r\n          <textarea\r\n            ref={textarear}\r\n            style={{\r\n              height: '100px',\r\n              marginTop: '22px',\r\n              border: '1.6px solid grey',\r\n              outline: 'none',\r\n              fontSize:\"15px\"\r\n            }}\r\n            placeholder=\"Type something here...\"\r\n          ></textarea>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <button\r\n              style={{\r\n                backgroundColor: '#5ff56c',\r\n                color: 'black',\r\n                padding: '4px  22px',\r\n                borderRadius: '4px',\r\n                fontSize: '13px',\r\n                fontWeight: '600',\r\n                marginTop: '12px',\r\n                outline: 'none',\r\n                cursor: 'pointer',\r\n                border: ' 2px #5ff56c ',\r\n              }}\r\n              onClick={() => {\r\n                dispatch(\r\n                  add({\r\n                    text: redref.current.value,\r\n                    mainbod: textarear.current.value,\r\n                    id: user.length + 1 - 1,\r\n                    time: current.toLocaleString(),\r\n                    chk:false\r\n                  })\r\n                );\r\n                setTogmod({ ...togmod, st: false });\r\n              }}\r\n            >\r\n              add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeWidth={1.5}\r\n        stroke=\"currentColor\"\r\n        style={{\r\n          height: '66px',\r\n          width: '55px',\r\n          cursor: 'pointer',\r\n          color: 'white',\r\n        }}\r\n        onClick={() => {\r\n          setTogmod({ ...togmod, st: true });\r\n        }}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n        />\r\n      </svg>\r\n      {/*add modal */}\r\n\r\n      <br />\r\n      <br />\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-around',\r\n          flexWrap: 'wrap',\r\n        }}\r\n      >\r\n        {user &&\r\n          user.map((da,i) => {\r\n            return (\r\n              <>\r\n                <div\r\n                key={i}\r\n                  style={{\r\n                    margin: '6px',\r\n                    padding: '23px',\r\n                    color: 'white',\r\n                    backgroundColor: '#686d75',\r\n\r\n                    borderRadius: '9px',\r\n                  }}\r\n                >\r\n                  <h3> {da.text}</h3>\r\n                  <h5 style={{marginTop:\"-13px\"}}>\r\n                    {da.time}\r\n                    </h5>\r\n                    <p style={{marginTop:\"-28\"}}>{da.mainbod}</p>\r\n                   <div\r\n                    style={{ display: 'flex', justifyContent: 'space-between' }}\r\n                  >  <ReactTooltip/>\r\n\r\n                   <svg    data-tip={da.chk?\"completed\":\"uncompleted\"}\r\n                    data-type=\"info\"\r\n                    data-border=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\" style={{\r\n                      height: '22px',\r\n                      width: '22px',\r\n                      color: da.chk?'#66fc03':'lightblue',\r\n                      cursor: 'pointer',\r\n                    }}   onClick={() => {\r\n                      edittext(da.id);\r\n                      setCh(true)\r\n                      {/*setUseinp(true);\r\n                      redref1.current.value = user[da.id].mainbod;*/}\r\n                      setGetid(da.id);\r\n                      dispatch(update({ii:da.id,te:da.text,mai:da.mainbod,tim:da.time},{tr:true}))\r\n                    }}>\r\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\r\n</svg>\r\n                    <ReactTooltip /> \r\n                    <svg\r\n                     data-tip=\"delete\"\r\n                     data-type=\"error\"\r\n                     data-border=\"true\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      strokeWidth={1.5}\r\n                      stroke=\"currentColor\"\r\n                      className=\"w-6 h-6\"\r\n                      style={{\r\n                        height: '22px',\r\n                        width: '22px',\r\n                        color: '#d9323a',\r\n                        cursor: 'pointer',\r\n                      }}\r\n                      onClick={() => {\r\n                        dispatch(dele(da.id));\r\n                      }}\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n\r\n      </div>\r\n    \r\n    </>\r\n  );\r\n};\r\nexport default Reduxnotes;\r\n","export const add=(pay)=>{\r\n  return{\r\n    type:\"add\",\r\n    payload:pay\r\n  }\r\n  \r\n  }\r\n  export const update=(pay,c)=>{\r\n    return{\r\n      type:\"update\",\r\n      payload:pay,\r\n      two:c\r\n    }\r\n    \r\n    }\r\n    export const dele=(pay)=>{\r\n      return{\r\n        type:\"del\",\r\n        payload:pay\r\n      }\r\n      \r\n      }\r\n      \r\n      export const imgrr=(pay)=>{\r\n        return{\r\n          type:\"imgr\",\r\n          payload:pay\r\n        }\r\n  \r\n      }\r\n      export const pain=(pay)=>{\r\n        return{\r\n          type:\"pai\",\r\n          payload:pay\r\n        }\r\n  \r\n      }","import React, { useRef } from 'react';\nimport './styles.css';\nimport Painding from './painding';\nimport Reduxnotes from './reduxnotes';\nimport ReactTooltip from 'react-tooltip';\nimport { Route, Routes, Link, NavLink } from 'react-router-dom';\nexport default function App() {\n  const [index, setIndex] = React.useState(null);\n  const [inp, setInp] = React.useState('');\n  const [data, setData] = React.useState([{}]);\n  const [filt, setFilt] = React.useState(true);\n  document.body.style.backgroundColor = 'black';\n  const reff = useRef(null);\n  const ids = (ob) => {\n    setIndex(ob);\n    reff.current.value = data[ob].text;\n  };\n\n  const edit = () => {\n    setFilt(true);\n    const tdo = [...data];\n    tdo[index].text = reff.current.value;\n    setData(tdo);\n  };\n  const dell = (idd) => {\n    let del = data.filter((e) => e.id !== idd);\n    setData(del);\n  };\n  \n  return (\n    <div>\n      {/*<input type={filt?\"hidden\":\"text\"} ref={reff}  />\n     <button onClick={()=>{\nedit()\n     }}> edit</button>\n      <h1>Hello StackBlitz!</h1>\n      <p >Start editing to see some magic happen :)</p>\n      <input\n        type=\"text\"\n        value={inp}\n        onChange={(e) => {\n          setInp(e.target.value);\n        }}\n      />\n      <button\n        onClick={() => {\n          \n          setData([...data,{text:inp,id:data.length-1+1}])\n        \n        }}\n      >\n        se\n      </button>\n\n      {data.length >=1\n        && data.map((e) => {\n            return (\n              <>\n                \n                  <p key={e.id}>{e.text}{e.id}</p>\n                \n                <button\n                  onClick={() => {\n                  \n                    setFilt(!filt)\n                 ids(e.id)\n                \n                  }}\n                >\n                  {' '}\n                  update\n                </button>\n\n                <button onClick={()=>{\ndell(e.id)\n                }}>del</button>\n              </>\n           \n          )  })}\n     \n\n<p>reduxpart</p>*/}\n\n\n<Link to=\"/p\">\n      <div\n        style={{\n          position: 'absolute',\n          right: '0',\n          marginRight: '22px',\n          top: '23px',\n          cursor: 'pointer',\n        }}\n      >\n      \n      <ReactTooltip/>\n        <svg\n        data-tip=\"Painding\"\n        data-type=\"warning\"\n        data-border=\"true\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth={1.5}\n          stroke=\"currentColor\"\n          className=\"w-6 h-6\"\n          style={{ height: '22px', width: '22px', color: 'white' }}\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M18.375 12.739l-7.693 7.693a4.5 4.5 0 01-6.364-6.364l10.94-10.94A3 3 0 1119.5 7.372L8.552 18.32m.009-.01l-.01.01m5.699-9.941l-7.81 7.81a1.5 1.5 0 002.112 2.13\"\n          />\n        </svg>\n        \n      </div>\n      </Link>\n      <Routes>\n        <Route path=\"/\" element={<Reduxnotes />} />\n        <Route path=\"/p\" element={<Painding />} />\n      </Routes>\n\n      \n    </div>\n  );\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport {Provider} from \"react-redux\";\nimport store from './store'\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\n\nroot.render(\n   <BrowserRouter>\n <Provider store={store}>\n    <App />\n </Provider>\n </BrowserRouter>\n);\n"],"sourceRoot":""}